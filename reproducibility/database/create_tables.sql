-- CREATE TABLES
CREATE OR REPLACE PROCEDURE CREATE_TABLES(schema_name text)
LANGUAGE plpgsql
AS $BODY$
BEGIN
	
	EXECUTE 'SET search_path = ' || schema_name;
	
	CREATE TABLE IF NOT EXISTS DEVICE
	(
		ID_DEVICE BIGSERIAL PRIMARY KEY,
		DS_DEVICE VARCHAR
	);

	CREATE TABLE IF NOT EXISTS ALGORITHM
	(
		ID_ALGORITHM BIGSERIAL PRIMARY KEY,
		DS_ALGORITHM VARCHAR
	);

	CREATE TABLE IF NOT EXISTS FUNCTION
	(
		ID_FUNCTION BIGSERIAL PRIMARY KEY,
		CD_FUNCTION BIGINT,
		DS_FUNCTION VARCHAR,
		ID_DEVICE BIGINT REFERENCES DEVICE(ID_DEVICE),
		ID_ALGORITHM BIGINT REFERENCES ALGORITHM(ID_ALGORITHM)
	);
	
	CREATE TABLE IF NOT EXISTS CONFIGURATION
	(
		ID_CONFIGURATION BIGSERIAL PRIMARY KEY,
		CD_CONFIGURATION BIGINT,
		ID_ALGORITHM BIGINT,
		CD_FUNCTION BIGINT,
		ID_DEVICE BIGINT
	);
	
	CREATE TABLE IF NOT EXISTS RESOURCE
	(
		ID_RESOURCE BIGSERIAL PRIMARY KEY,
		DS_RESOURCE VARCHAR,
		NR_NODES BIGINT,
		NR_COMPUTING_UNITS_CPU BIGINT,
		NR_COMPUTING_UNITS_GPU BIGINT,
		VL_MEMORY_SIZE_PER_CPU_COMPUTING_UNIT BIGINT,
		VL_MEMORY_SIZE_PER_GPU_COMPUTING_UNIT BIGINT
	);

	CREATE TABLE IF NOT EXISTS DATASET
	(
		ID_DATASET BIGSERIAL PRIMARY KEY,
		DS_DATASET VARCHAR,
		VL_DATASET_MEMORY_SIZE BIGINT,
		DS_DATA_TYPE VARCHAR,
		VL_DATA_TYPE_MEMORY_SIZE BIGINT,
		VL_DATASET_DIMENSION BIGINT,
		VL_DATASET_ROW_DIMENSION BIGINT,
		VL_DATASET_COLUMN_DIMENSION BIGINT,
		NR_RANDOM_STATE BIGINT,
		VL_DATA_SPARSITY DOUBLE PRECISION,
		VL_DATA_SKEWNESS DOUBLE PRECISION
	);

	CREATE TABLE IF NOT EXISTS PARAMETER_TYPE
	(
		ID_PARAMETER_TYPE BIGSERIAL PRIMARY KEY,
		DS_PARAMETER_TYPE VARCHAR,
		DS_PARAMETER_ATTRIBUTE VARCHAR,
		DS_COMPSS_VERSION VARCHAR,
		DS_DISLIB_VERSION VARCHAR,
		DS_SCHDEULER VARCHAR,
		NR_CLUSTER BIGINT,
		DS_STORAGE VARCHAR,
		BL_TRANSPOSE_MATRIX BOOLEAN
	);
	
	CREATE TABLE IF NOT EXISTS PARAMETER
	(
		ID_PARAMETER BIGSERIAL PRIMARY KEY,
		CD_PARAMETER BIGINT,
		CD_CONFIGURATION BIGINT,
		ID_ALGORITHM BIGINT REFERENCES ALGORITHM(ID_ALGORITHM),
		ID_FUNCTION BIGINT REFERENCES FUNCTION(ID_FUNCTION),
		ID_DATASET BIGINT REFERENCES DATASET(ID_DATASET),
		ID_RESOURCE BIGINT REFERENCES RESOURCE(ID_RESOURCE),
		ID_PARAMETER_TYPE BIGINT REFERENCES PARAMETER_TYPE(ID_PARAMETER_TYPE),
		NR_ITERATIONS BIGINT,
		VL_GRID_ROW_DIMENSION BIGINT,
		VL_GRID_COLUMN_DIMENSION BIGINT,
		VL_BLOCK_ROW_DIMENSION BIGINT,
		VL_BLOCK_COLUMN_DIMENSION BIGINT,
		VL_BLOCK_MEMORY_SIZE BIGINT,
		VL_BLOCK_MEMORY_SIZE_PERCENT_CPU DOUBLE PRECISION,
		VL_BLOCK_MEMORY_SIZE_PERCENT_GPU DOUBLE PRECISION
	);

	CREATE TABLE IF NOT EXISTS EXPERIMENT_RAW
	(
		ID_EXPERIMENT BIGSERIAL PRIMARY KEY,
		ID_PARAMETER BIGINT REFERENCES PARAMETER(ID_PARAMETER),
		NR_ALGORITHM_ITERATION BIGINT,
		NR_FUNCTION_ITERATION BIGINT,
		NR_TASK BIGINT,
		VL_TOTAL_EXECUTION_TIME DOUBLE PRECISION,
		VL_INTER_TASK_EXECUTION_TIME DOUBLE PRECISION,
		VL_INTRA_TASK_EXECUTION_TIME_FULL_FUNC DOUBLE PRECISION,
		VL_INTRA_TASK_EXECUTION_TIME_DEVICE_FUNC DOUBLE PRECISION,
		VL_COMMUNICATION_TIME_1 DOUBLE PRECISION,
		VL_COMMUNICATION_TIME_2 DOUBLE PRECISION,
		VL_ADDITIONAL_TIME_1 DOUBLE PRECISION,
		VL_ADDITIONAL_TIME_2 DOUBLE PRECISION,
		DT_PROCESSING TIMESTAMP
	);

	CREATE UNIQUE INDEX IF NOT EXISTS idx_experiment_raw ON EXPERIMENT_RAW (ID_PARAMETER,NR_ALGORITHM_ITERATION,NR_FUNCTION_ITERATION,NR_TASK,VL_TOTAL_EXECUTION_TIME,VL_INTER_TASK_EXECUTION_TIME,VL_INTRA_TASK_EXECUTION_TIME_FULL_FUNC,VL_INTRA_TASK_EXECUTION_TIME_DEVICE_FUNC,VL_COMMUNICATION_TIME_1,VL_COMMUNICATION_TIME_2,VL_ADDITIONAL_TIME_1,VL_ADDITIONAL_TIME_2,DT_PROCESSING);

	EXECUTE 'SET search_path = public';

END; 
$BODY$;